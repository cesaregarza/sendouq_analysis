name: Run Scraper

on:
  #   schedule:
  #     - cron: "0 */2 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    environment: Scraper
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Get self ip
        id: self_ip
        run: echo "self_ip=$(curl -s https://api.ipify.org)" >> $GITHUB_OUTPUT

      - name: Replace cloud-init.yml placeholders
        working-directory: terraform/scraper
        run: |
          sed -i "s/{{POSTGRES_USER}}/${{ secrets.POSTGRES_USER }}/g" cloud-init.yml
          sed -i "s/{{POSTGRES_PASSWORD}}/${{ secrets.POSTGRES_PASSWORD }}/g" cloud-init.yml
          sed -i "s/{{POSTGRES_HOST}}/${{ secrets.POSTGRES_HOST }}/g" cloud-init.yml
          sed -i "s/{{POSTGRES_PORT}}/${{ secrets.POSTGRES_PORT }}/g" cloud-init.yml
          sed -i "s/{{POSTGRES_DB}}/${{ secrets.POSTGRES_DB }}/g" cloud-init.yml
          sed -i "s/{{DO_API_TOKEN}}/${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}/g" cloud-init.yml

      - name: Terraform Init
        working-directory: terraform/scraper
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform/scraper
        run: |
          terraform plan -out=tfplan -input=false
        env:
          TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          TF_VAR_source_ip: ${{ steps.self_ip.outputs.self_ip }}

      - name: Terraform Apply
        id: terraform_apply
        working-directory: terraform/scraper
        run: |
          terraform apply -auto-approve tfplan
          SCRAPER_IP=$(terraform output -raw scraper_ip)
          echo "scraper_ip=$SCRAPER_IP" >> $GITHUB_OUTPUT

      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #       token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # - name: SSH
      #   run: |
      #     echo ${{ secrets.DIGITALOCEAN_SSH_KEY_ED }} > key.pem
      #     doctl compute ssh sendouq-scraper --ssh-key-path key.pem --ssh-command "echo 'hello world'" --trace --verbose

      # - name: SSH
      #   run: |
      #     echo ${{ secrets.DIGITALOCEAN_SSH_KEY_ED }} > key.pem
      #     ssh -i key.pem root@${{ steps.terraform_apply.outputs.scraper_ip }} 'echo "hello world"'

      # - name: SSH to Scraper
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ steps.terraform_apply.outputs.scraper_ip }}
      #     username: root
      #     key: ${{ secrets.DIGITALOCEAN_SSH_KEY_ED }}
      #     debug: true
      #     script: |
      #       export PATH=$PATH:/usr/bin
      #       export POSTGRES_USER=${{ secrets.POSTGRES_USER}}
      #       export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      #       export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
      #       export POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
      #       export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      #       export DO_API_TOKEN=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      #       apt-get update
      #       apt-get install -y docker.io
      #       docker pull registry.digitalocean.com/sendouq/scraper:latest
      #       docker run -d --name sendouq-scraper sendouq-scraper:latest
