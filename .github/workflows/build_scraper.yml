name: Build Scraper

on:
  #   push:
  #     branches:
  #       - main
  workflow_dispatch:
    inputs:
      override-check:
        description: 'Override check for changes'
        type: boolean
        required: false
        default: false

jobs:
  check:
    runs-on: ubuntu-latest
    environment: Scraper
    outputs:
      skip: ${{ steps.check_changes.outputs.skip }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_SENDOUQ_SCRAPER_TOKEN }}
          fetch-depth: 0

      - name: Check for changes
        id: check_changes
        run: |
          echo "Checking for changes"
          LATEST_TAG=$(git describe --tags --always `git rev-list --tags --max-count=1` 2>&1)
          TAG_FETCH_EXIT_CODE=$?

          if [ $TAG_FETCH_EXIT_CODE -ne 0 ]; then
            echo "Failed to fetch latest tag, exit code: $TAG_FETCH_EXIT_CODE"
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ -z "$LATEST_TAG" ]; then
            echo "No tags found, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Latest tag: $LATEST_TAG"
            CHANGES=$(git diff --name-only $LATEST_TAG HEAD -- 'src/')
            if [ -n "$CHANGES" ]; then
              echo "Changes found, running"
              echo "skip=false" >> $GITHUB_OUTPUT
            else
              echo "No changes found, skipping"
              echo "skip=true" >> $GITHUB_OUTPUT
            fi
          fi

  build:
    needs: check
    if: (needs.check.outputs.skip == 'false') || (github.event.inputs.override-check == 'true')
    runs-on: ubuntu-latest
    environment: Scraper
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install Docker
        uses: docker/setup-buildx-action@v1

      - name: Build docker image
        run: docker build -t scraper:latest -f dockerfile .

      - name: Authenticate to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 300

      - name: Tag docker image
        run: |
          docker tag scraper:latest registry.digitalocean.com/sendouq/scraper:latest

      - name: Push docker image
        run: |
          docker push registry.digitalocean.com/sendouq/scraper:latest
